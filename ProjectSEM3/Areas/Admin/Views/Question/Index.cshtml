@{
    ViewBag.Title = "Question";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<h2>Question</h2>

<div class="me-4">
    @Html.Partial("~/Areas/Admin/Views/Shared/Partials/Question/_PartialNew.cshtml")
</div>
<div class="me-4">
    @Html.Partial("~/Areas/Admin/Views/Shared/Partials/Question/_PartialView.cshtml")
</div>

@section Scripts {
    <script>
        const $isCorrectAnswer = $(".isCorrectAnswer")
        const $isCorrectAnswerWrap = $(".isCorrectAnswerWrap")
        const $questCross = $(".questCross")
        const $answerCross = $(".answerCross")
        const $type = $("#type")
        const $level = $("#level")
        const $examTypes = $("#examTypes")
        const $point = $("#point")
        const $isMultiSelect = $("#isMultiSelect")
        const $crossQuestion = $("#crossQuestion")
        const $normalQuestion = $("#normalQuestion")
        const $content = $("#content")
        const $answerA = $("#answerA")
        const $answerB = $("#answerB")
        const $answerC = $("#answerC")
        const $answerD = $("#answerD")

        const $isCorrectAnswerUpdate = $(".isCorrectAnswerUpdate")
        const $typeUpdate = $("#typeUpdate")
        const $levelUpdate = $("#levelUpdate")
        const $examTypesUpdate = $("#examTypesUpdate")
        const $pointUpdate = $("#pointUpdate")
        const $isMultiSelectUpdate = $("#isMultiSelectUpdate")
        const $contentUpdate = $("#contentUpdate")
        const $answerAUpdate = $("#answerAUpdate")
        const $answerBUpdate = $("#answerBUpdate")
        const $answerCUpdate = $("#answerCUpdate")
        const $answerDUpdate = $("#answerDUpdate")

        const $isCorrectAnswerView = $(".isCorrectAnswerView")
        const $typeView = $("#typeView")
        const $levelView = $("#levelView")
        const $pointView = $("#pointView")
        const $isMultiSelectView = $("#isMultiSelectView")
        const $contentView = $("#contentView")
        const $answerAView = $("#answerAView")
        const $answerBView = $("#answerBView")
        const $answerCView = $("#answerCView")
        const $answerDView = $("#answerDView")
        const $isCorrectAnswerAView = $("#isCorrectAnswerAView")
        const $isCorrectAnswerBView = $("#isCorrectAnswerBView")
        const $isCorrectAnswerCView = $("#isCorrectAnswerCView")
        const $isCorrectAnswerDView = $("#isCorrectAnswerDView")

        const $questionTable = $("#questionTable")
        const $liveToast = $("#liveToast")
        const $toastMes = $("#toastMes")
        //const $updateHr = $("#updateHr")

        $questionTable.DataTable();

        const OnChangeQuestionType = (e) => {
            if (e.target.value == 1) {
                $normalQuestion[0].hidden = false
                $crossQuestion[0].hidden = true
                $isMultiSelect[0].checked = false
                $isMultiSelect[0].disabled = false
            } else if (e.target.value == 2) {
                $normalQuestion[0].hidden = true
                $crossQuestion[0].hidden = false
                $isMultiSelect[0].checked = true
                $isMultiSelect[0].disabled = true
            } else {
                $normalQuestion[0].hidden = false
                $crossQuestion[0].hidden = true
                for (var ele of $isCorrectAnswerWrap) {
                    ele.hidden = true
                }
                $isMultiSelect[0].checked = true
                $isMultiSelect[0].disabled = true
            }
        }

        const OnMultiSelected = (e) => {
            for (var ele of $isCorrectAnswer) {
                if (e.target.checked) {
                    ele.type = 'checkbox'
                } else {
                    ele.type = 'radio'
                }
            }
        }

        const OnMultiSelectedUpdate = (e) => {
            for (var ele of $isCorrectAnswerUpdate) {
                if (e.target.checked) {
                    ele.type = 'checkbox'
                } else {
                    ele.type = 'radio'
                }
            }
        }

        const NewQuestion = () => {
            var _correctAnwser = []
            const TypeId = $type.val()
            const LevelId = $level.val()
            const ExamTypeId = $examTypes.val()
            const Content = $content.val()
            const Point = $point.val()
            const IsMultiAnwser = $isMultiSelect[0].checked

            let Options = ''
            let localOption = []
            let localAnwser = []
            let CorrectAnwser = ''
            if ($type.val() == 1) {
                for (var ele of $isCorrectAnswer) {
                    if (ele.checked) {
                        _correctAnwser.push(ele.parentElement.parentElement.parentElement.children[1].value)
                    }
                }

                localOption.push($answerA.val())
                localOption.push($answerB.val())
                localOption.push($answerC.val())
                localOption.push($answerD.val())

                CorrectAnwser = JSON.stringify(_correctAnwser)
                Options = JSON.stringify(localOption)
            } else if ($type.val() == 2) {
                var options = []
                var optionAnwsers = []
                for (var i = 0; i < 4; i++) {
                    options.push($questCross[i].value)
                    optionAnwsers.push($answerCross[i].value)

                    var anwsers = []
                    anwsers.push($questCross[i].value)
                    anwsers.push($answerCross[i].value)
                    localAnwser.push(anwsers)
                    anwsers = []
                }
                localOption.push(options)
                localOption.push(optionAnwsers)

                Options = JSON.stringify(localOption)
                CorrectAnwser = JSON.stringify(localAnwser)
            } else {
                localOption.push($answerA.val())
                localOption.push($answerB.val())
                localOption.push($answerC.val())
                localOption.push($answerD.val())

                Options = JSON.stringify(localOption)
                CorrectAnwser = JSON.stringify(localOption)
            }

            const req = {
                TypeId,
                LevelId,
                ExamTypeId,
                Content,
                Point,
                Options,
                CorrectAnwser,
                IsMultiAnwser
            }

            $.ajax({
                type: "POST",
                url: "/admin/question/NewQuestion",
                data: req,
                dataType: "json",
                success: function (res) {
                    OnSetupToast(res, $liveToast, $toastMes)
                },
                error: function (jqXHR, err, errorThrown) {
                    OnServerErr($liveToast, $toastMes);
                }
            });

            setTimeout(OnHideToast, 3000)
        }

        const OnIsCorrectTextClick = (e) => {
            e.target.parentElement.children[0].checked = !e.target.parentElement.children[0].checked
        }

        const OnHideToast = () => {
            $liveToast.hide()
        }

        const OnAddClassName = (ele, className) => {
            if (!ele[0].classList.contains(className)) {
                ele[0].classList.add(className);
            }
        }

        const OnRemoveClassName = (ele, className) => {
            ele[0].classList.remove(className);
        }

        const OnChangeQuestionStatus = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            const Id = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-question'))
            const Status = !data.Status
            const req = { Id, Status }
            $.ajax({
                type: "POST",
                url: "/admin/question/ChangeQuestionStatus",
                data: req,
                dataType: "json",
                success: function (res) {
                    OnSetupToast(res, $liveToast, $toastMes)
                    e.target.setAttribute('data-question', JSON.stringify(res.Data))
                    let statusText = 'Active'
                    let bgCss = 'success'
                    if (!res.Data.Status) {
                        statusText = "Deleted"
                        bgCss = 'danger'
                        e.target.hidden = true
                    }
                    $questionTable[0].rows[RowIndex].children[4].innerHTML = `<span class="badge bg-${bgCss}">${statusText}</span>`;
                },
                error: function (jqXHR, err, errorThrown) {
                    OnServerErr($liveToast, $toastMes);
                }
            });

            setTimeout(OnHideToast, 3000)
        }

        let RowIndex = 0;
        let CurrentId = 0;
        let CurrentSelection = ''

        const OnSelectRowQuestion = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            CurrentSelection = e.target
            CurrentId = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-question'))

            for (var i = 0; i < $typeUpdate[0].length; i++) {
                if ($typeUpdate[0].options[i].innerHTML == data.TypeName) {
                    $typeUpdate[0].options[i].selected = true;
                }
            }

            for (var i = 0; i < $levelUpdate[0].length; i++) {
                if ($levelUpdate[0].options[i].innerHTML == data.LevelName) {
                    $levelUpdate[0].options[i].selected = true;
                }
            }
            
            for (var i = 0; i < $pointUpdate[0].length; i++) {
                if ($pointUpdate[0].options[i].innerHTML == data.Point) {
                    $pointUpdate[0].options[i].selected = true;
                }
            }

            for (var i = 0; i < $examTypesUpdate[0].length; i++) {
                if ($examTypesUpdate[0].options[i].innerHTML == data.ExamTypeName) {
                    $examTypesUpdate[0].options[i].selected = true;
                }
            }

            $isMultiSelectUpdate[0].checked = data.IsMultiAnwser
            $contentUpdate.val(data.Content)

            const options = JSON.parse(data.Options)
            const correctAnwsers = JSON.parse(data.CorrectAnwser)
            $answerAUpdate.val(options[0])
            $answerBUpdate.val(options[1])
            $answerCUpdate.val(options[2])
            $answerDUpdate.val(options[3])

            for (var ele of $isCorrectAnswerUpdate) {
                if (data.IsMultiAnwser) {
                    ele.type = 'checkbox'
                } else {
                    ele.type = 'radio'
                }
            }

            for (var i = 0; i < options.length; i++) {
                for (var answer of correctAnwsers) {
                    $isCorrectAnswerUpdate[i].checked = !(answer == options[i])
                }
            }
        }

        const OnUpdateQuestion = (e) => {
            const Id = CurrentId
            var _correctAnwser = []
            for (var ele of $isCorrectAnswerUpdate) {
                if (ele.checked) {
                    _correctAnwser.push(ele.parentElement.parentElement.parentElement.children[1].value)
                }
            }
            const CorrectAnwser = JSON.stringify(_correctAnwser)
            const IdType = $typeUpdate.val()
            const IdLevel = $levelUpdate.val()
            const Content = $contentUpdate.val()
            const Point = $pointUpdate.val()
            const localOption = []
            localOption.push($answerAUpdate.val())
            localOption.push($answerBUpdate.val())
            localOption.push($answerCUpdate.val())
            localOption.push($answerDUpdate.val())
            const Options = JSON.stringify(localOption)
            const IsMultiAnwser = $isMultiSelectUpdate[0].checked

            const req = {
                Id,
                IdType,
                IdLevel,
                Content,
                Point,
                Options,
                CorrectAnwser,
                IsMultiAnwser
            }
            const rowIndex = RowIndex

            $.ajax({
                type: "POST",
                url: "/admin/question/UpdateQuestion",
                data: { req, rowIndex },
                dataType: "json",
                success: function (res) {
                    OnSetupToast(res, $liveToast, $toastMes)
                    if (res.IsSuccess) {
                        $questionTable[0].rows[RowIndex].children[1].innerHTML = res.Data.Content;
                        $questionTable[0].rows[RowIndex].children[2].innerHTML = res.Data.TypeName;
                        $questionTable[0].rows[RowIndex].children[3].innerHTML = res.Data.LevelName;
                        CurrentSelection.setAttribute('data-question', JSON.stringify(res.Data))
                        CurrentSelection.parentElement.children[1].setAttribute('data-question', JSON.stringify(res.Data))
                    }
                },
                error: function (jqXHR, err, errorThrown) {
                    OnServerErr($liveToast, $toastMes);
                }
            });

            setTimeout(OnHideToast, 3000)
        }

        const OnViewQuestion = (e) => {
            const data = JSON.parse(e.target.getAttribute('data-question'))

            $typeView[0].innerHTML = data.TypeName
            $levelView[0].innerHTML = data.LevelName
            $pointView[0].innerHTML = data.Point
            $isMultiSelectView[0].innerHTML = data.IsMultiAnwser
            $contentView[0].innerHTML = data.Content
            const options = JSON.parse(data.Options)
            const correctAnwsers = JSON.parse(data.CorrectAnwser)

            $answerAView[0].innerHTML = options[0]
            $answerBView[0].innerHTML = options[1]
            $answerCView[0].innerHTML = options[2]
            $answerDView[0].innerHTML = options[3]


            for (var i = 0; i < options.length; i++) {
                for (var answer of correctAnwsers) {
                    if (answer == options[i]) {
                        $isCorrectAnswerView[i].hidden = false
                    }
                }
            }
        }

        //$updateHr[0].addEventListener('hidden.bs.modal', function (event) {
        //    OnClearFormUpdateHr();
        //})

        //const OnClearFormUpdateHr = () => {
        //    $nameUpdate.val("")
        //    $emailUpdate.val("")
        //    $contactUpdate.val("")
        //    $educationUpdate.val("")
        //    $addressUpdate.val("")
        //    $experienceUpdate.val("")
        //}



        //const OnClearFormNewHr = () => {
        //    $name.val("")
        //    $email.val("")
        //    $contact.val("")
        //    $education.val("")
        //    $address.val("")
        //    $experience.val("")
        //}

        const OnSetupToast = (res, $toast, $toastMes) => {
            if (res.IsSuccess) {
                OnRemoveClassName($toast, "bg-danger-subtle")
                OnAddClassName($toast, "bg-primary-subtle");
            } else {
                OnRemoveClassName($toast, "bg-primary-subtle");
                OnAddClassName($toast, "bg-danger-subtle")
            }
            $toastMes[0].innerHTML = res.Mes
            $toast.show()
        }

        const OnServerErr = ($toast, $toastMes) => {
            OnRemoveClassName($toast, "bg-primary-subtle");
            OnAddClassName($toast, "bg-danger-subtle")
            $toastMes[0].innerHTML = "Connection fail or Something wrong in server."

        }
    </script>
}
