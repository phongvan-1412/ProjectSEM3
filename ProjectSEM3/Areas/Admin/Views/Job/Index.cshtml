@{
    ViewBag.Title = "Job";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container">
    <h1>Job</h1>

    <div class="me-4">
        @Html.Partial("~/Areas/Admin/Views/Shared/Partials/Job/_PartialNew.cshtml")
    </div>
    <div class="me-4">
        @Html.Partial("~/Areas/Admin/Views/Shared/Partials/Job/_PartialView.cshtml")
    </div>
</div>

<input type="tẽt" name="name" id="test" value="" hidden />
@section Scripts {
    <script type="text/javascript">
        const $title = $("#title")
        const $location = $("#location")
        const $endDate = $("#endDate")
        const $salaryMin = $("#salaryMin")
        const $salaryMax = $("#salaryMax")
        const $level = $("#level")
        const $content = CKEDITOR.replace('content');

        const $titleErr = $("#titleErr")
        const $locationErr = $("#locationErr")
        const $endDateErr = $("#endDateErr")
        const $salaryMinErr = $("#salaryMin")
        const $salaryMaxErr = $("#salaryMax")
        const $levelErr = $("#levelErr")
        const $contentErr = $("#contentErr");

        let checkTitle = false
        let checkLocation = false
        let checkEnDate = false
        let checkMinSal = false
        let checkMaxSal = false
        let checkLevel = false
        let checkContent = false

        const $titleUpdate = $("#titleUpdate")
        const $locationUpdate = $("#locationUpdate")
        const $endDateUpdate = $("#endDateUpdate")
        const $salaryMinUpdate = $("#salaryMinUpdate")
        const $salaryMaxUpdate = $("#salaryMaxUpdate")
        const $levelUpdate = $("#levelUpdate")
        const $contentUpdate = CKEDITOR.replace('contentUpdate');

        //const $titleView = $("#titleView")
        //const $locationView = $("#locationView")
        //const $endDateView = $("#endDateView")
        //const $salaryMinView = $("#salaryMinView")
        //const $salaryMaxView = $("#salaryMaxView")
        //const $levelView = $("#levelView")
        //const $contentView = $("#contentView")

        const $jobTable = $("#jobTable")
        const $liveToast = $("#liveToast")
        const $toastMes = $("#toastMes")
        //const $updateHr = $("#updateHr")

        $jobTable.DataTable();

        const CheckTitle = () => {
            var data = $title.val()
            if (data === '') {
                $titleErr[0].innerHTML = "*Please enter Job Title."
            } else if (education.length > 1000) {
                $titleErr[0].innerHTML = "*Max lenght 1000."
            } else {
                $titleErr[0].innerHTML = ""
                checkTitle = true
            }
        }

        const CheckLocation = () => {

        }

        const CheckEndDate = () => {

        }

        const CheckMinSal = () => {

        }

        const CheckMaxSal = () => {

        }

        const CheckLevel = () => {

        }

        const CheckContent = () => {

        }


        const OnNewJob = () => {
            CheckTitle();
            CheckLocation();
            CheckEndDate();
            CheckMinSal();
            CheckMaxSal();
            CheckLevel();
            CheckContent();

            if (!checkTittle || !checkLocation || !checkEnDate || !checkMinSal ||
                !checkMaxSal || !checkLevel || !checkContent) {
                return;
                }




            const Title = $title.val()
            const Location = $location.val()
            const PostedDate = FormatDate(new Date().toUTCString());
            const EndDate = FormatDate($endDate.val())
            const SalaryMin = $salaryMin.val()
            const SalaryMax = $salaryMax.val()
            const LevelId = $level.val()
            const Content = encodeURI($content.getData());

            const job = {
                Title,
                Location,
                PostedDate,
                EndDate,
                SalaryMin,
                SalaryMax,
                LevelId,
                Content
            }
            BlockUI()

            $.ajax({
                type: "POST",
                url: "/admin/job/NewJob",
                data: job ,
                dataType: "json",
                success: function (res) {
                    UnBlockUI()
                    OnSetupToast(res, $liveToast, $toastMes)
                    if (res.IsSuccess) {
                        location.reload()
                    }
                },
                error: function (jqXHR, err, errorThrown) {
                    UnBlockUI()
                    OnServerErr($liveToast, $toastMes);
                }
            });
        }

        const OnChangeJobStatus = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            const Id = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-job'))
            const Status = !data.Status
            const job = { Id, Status }
            BlockUI()

            $.ajax({
                type: "POST",
                url: "/admin/job/ChangeJobStatus",
                data: job,
                dataType: "json",
                success: function (res) {
                    UnBlockUI()
                    if (res.IsSuccess) {
                        OnSetupToast(res, $liveToast, $toastMes)
                        e.target.setAttribute('data-job', JSON.stringify(res.Data))
                        e.target.hidden = !res.Data.Status
                        $jobTable[0].rows[RowIndex].children[6].innerHTML = `<span class="badge bg-${res.Data.StatusType.BadgeCss}">${res.Data.StatusType.Name}</span>`;
                    }
                },

                error: function (jqXHR, err, errorThrown) {
                    UnBlockUI()
                    OnServerErr($liveToast, $toastMes);
                }
            });
        }

        let RowIndex = 0;
        let CurrentId = 0;
        let CurrentSelection = ''
        const OnSelectRowJob = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            CurrentSelection = e.target
            CurrentId = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-job'))
            $titleUpdate.val(data.Title)
            $locationUpdate.val(data.Location)
            $endDateUpdate[0].valueAsNumber = Date.parse(data.EndDate)
            $salaryMinUpdate.val(data.SalaryMin)
            $salaryMaxUpdate.val(data.SalaryMax)

            for (var i = 0; i < $levelUpdate[0].length; i++) {
                if ($levelUpdate[0].options[i].innerHTML == data.LevelName) {
                    $levelUpdate[0].options[i].selected = true;
                }
            }

            $contentUpdate.setData(decodeURI(data.Content))
        }

        const OnUpdateJob = (e) => {
            const Id = CurrentId
            const Title = $titleUpdate.val()
            const Location = $locationUpdate.val()
            const EndDate = FormatDate($endDateUpdate.val())
            const SalaryMin = $salaryMinUpdate.val()
            const SalaryMax = $salaryMaxUpdate.val()
            const LevelId = $levelUpdate.val()
            const Content = encodeURI($contentUpdate.getData());
            const job = {
                Id,
                Title,
                Location,
                EndDate,
                SalaryMin,
                SalaryMax,
                LevelId,
                Content
            }
            const rowIndex = RowIndex
            BlockUI()

            $.ajax({
                type: "POST",
                url: "/admin/Job/UpdateJob",
                data: { job, rowIndex },
                dataType: "json",
                success: function (res) {
                    UnBlockUI()
                    OnSetupToast(res, $liveToast, $toastMes)
                    console.log(res.Data)
                    if (res.IsSuccess) {
                        $jobTable[0].rows[RowIndex].children[1].innerHTML = res.Data.Title;
                        $jobTable[0].rows[RowIndex].children[2].innerHTML = res.Data.Location;
                        $jobTable[0].rows[RowIndex].children[3].innerHTML = res.Data.PostedDateTimeStamp;
                        $jobTable[0].rows[RowIndex].children[4].innerHTML = res.Data.EndDateTimeStamp;
                        $jobTable[0].rows[RowIndex].children[5].innerHTML = res.Data.Salary;
                        CurrentSelection.setAttribute('data-job', JSON.stringify(res.Data))
                        CurrentSelection.parentElement.children[1].setAttribute('data-job', JSON.stringify(res.Data))
                    }
                },
                error: function (jqXHR, err, errorThrown) {
                    UnBlockUI()
                    OnServerErr($liveToast, $toastMes);
                }
            });
        }

        //const OnViewHr = (e) => {
        //    const data = JSON.parse(e.target.getAttribute('data-hr'))
        //    $nameView[0].innerHTML = data.Name
        //    $emailView[0].innerHTML = data.Email
        //    $contactView[0].innerHTML = data.Contact
        //    $educationView[0].innerHTML = data.Education
        //    $addressView[0].innerHTML = data.Address
        //    $experienceView[0].innerHTML = data.Experience
        //}

        //$updateHr[0].addEventListener('hidden.bs.modal', function (event) {
        //    OnClearFormUpdateHr();
        //})

        //const OnClearFormUpdateHr = () => {
        //    $nameUpdate.val("")
        //    $emailUpdate.val("")
        //    $contactUpdate.val("")
        //    $educationUpdate.val("")
        //    $addressUpdate.val("")
        //    $experienceUpdate.val("")
        //}

        //const OnClearFormNewHr = () => {
        //    $name.val("")
        //    $email.val("")
        //    $contact.val("")
        //    $education.val("")
        //    $address.val("")
        //    $experience.val("")
        //}
    </script>
}

