@{
    ViewBag.Title = "Job";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container">
    <h1>Job</h1>

    <div class="me-4">
        @Html.Partial("~/Areas/Admin/Views/Shared/Partials/Job/_PartialNew.cshtml")
    </div>
    <div class="me-4">
        @Html.Partial("~/Areas/Admin/Views/Shared/Partials/Job/_PartialView.cshtml")
    </div>
</div>

<input type="tẽt" name="name" id="test" value="" hidden />
@section Scripts {
    <script type="text/javascript">
        const $title = $("#title")
        const $location = $("#location")
        const $endDate = $("#endDate")
        const $salaryMin = $("#salaryMin")
        const $salaryMax = $("#salaryMax")
        const $level = $("#level")
        const $content = CKEDITOR.replace('content');
        const $qualification = CKEDITOR.replace('qualification');

        const $titleErr = $("#titleErr")
        const $locationErr = $("#locationErr")
        const $endDateErr = $("#endDateErr")
        const $salaryMinErr = $("#minSalErr")
        const $salaryMaxErr = $("#maxSalErr")
        const $levelErr = $("#levelErr")
        const $contentErr = $("#contentErr");
        const $qualificationErr = $("#qualificationErr");

        let checkTitle = false
        let checkLocation = false
        let checkEnDate = false
        let checkMinSal = false
        let checkMaxSal = false
        let checkLevel = false
        let checkContent = false
        let checkQualification = false

        const $titleUpdate = $("#titleUpdate")
        const $locationUpdate = $("#locationUpdate")
        const $endDateUpdate = $("#endDateUpdate")
        const $salaryMinUpdate = $("#salaryMinUpdate")
        const $salaryMaxUpdate = $("#salaryMaxUpdate")
        const $levelUpdate = $("#levelUpdate")
        const $contentUpdate = CKEDITOR.replace('contentUpdate');
        const $qualificationUpdate = CKEDITOR.replace('qualificationUpdate');

        const $titleUpdateErr = $("#titleUpdateErr")
        const $locationUpdateErr = $("#locationUpdateErr")
        const $endDateUpdateErr = $("#endDateUpdateErr")
        const $salaryMinUpdateErr = $("#minSalUpdateErr")
        const $salaryMaxUpdateErr = $("#maxSalUpdateErr")
        const $levelUpdateErr = $("#levelUpdateErr")
        const $contentUpdateErr = $("#contentUpdateErr");
        const $qualificationUpdateErr = $("#qualificationUpdateErr");

        let checkTitleUpdate = false
        let checkLocationUpdate = false
        let checkEnDateUpdate = false
        let checkMinSalUpdate = false
        let checkMaxSalUpdate = false
        let checkLevelUpdate = false
        let checkContentUpdate = false
        let checkQualificationUpdate = false

        //const $titleView = $("#titleView")
        //const $locationView = $("#locationView")
        //const $endDateView = $("#endDateView")
        //const $salaryMinView = $("#salaryMinView")
        //const $salaryMaxView = $("#salaryMaxView")
        //const $levelView = $("#levelView")
        //const $contentView = $("#contentView")

        const $jobTable = $("#jobTable")
        const $liveToast = $("#liveToast")
        const $toastMes = $("#toastMes")
        //const $updateHr = $("#updateHr")

        $jobTable.DataTable();

        const CheckTitle = () => {
            var data = $title.val()
            if (data === '') {
                $titleErr[0].innerHTML = "*Please enter Job Title."
            } else if (data.length > 1000) {
                $titleErr[0].innerHTML = "*Max lenght 1000."
            } else {
                $titleErr[0].innerHTML = ""
                checkTitle = true
            }
        }

        const CheckLocation = () => {
            var data = $location.val()
            if (data === '') {
                $locationErr[0].innerHTML = "*Please enter Job Location."
            } else if (data.length > 1000) {
                $locationErr[0].innerHTML = "*Max lenght 1000."
            } else {
                $locationErr[0].innerHTML = ""
                checkLocation = true
            }
        }

        const CheckEndDate = () => {
            var data = $endDate.val()
            if (data === '') {
                $endDateErr[0].innerHTML = "*Please enter Job End Date."
            } else {
                $endDateErr[0].innerHTML = ""
                checkEnDate = true
            }
        }

        const CheckMinSal = () => {
            const data = $salaryMin.val()
            if (data <= 0) {
                $salaryMin.val(0)
                $salaryMinErr[0].innerHTML = "*Please enter Min Salary."
            } else if (data > 5000) {
                $salaryMin.val(5000)
            } else {
                $salaryMinErr[0].innerHTML = ""
                checkMinSal = true
            }
        }

        const CheckMaxSal = () => {
            const data = $salaryMax.val()
            if (data <= 0) {
                $salaryMax.val(0)
                $salaryMaxErr[0].innerHTML = "*Please enter Max Salary."
            } else if (data > 50000) {
                $salaryMax.val(50000)
            }else {
                $salaryMaxErr[0].innerHTML = ""
                checkMaxSal = true
            }
        }

        const CheckLevel = () => {
            var data = $level.val()
            if (data == 0) {
                $levelErr[0].innerHTML = "*Please select Level."
            } else {
                $levelErr[0].innerHTML = ""
                checkLevel = true
            }
        }

        const CheckContent = () => {
            var data = encodeURI($content.getData());
            if (data === '') {
                $contentErr[0].innerHTML = "*Please enter Job Content."
            } else if (data.length > 10000) {
                $contentErr[0].innerHTML = "*Max lenght 10000."
            } else {
                $contentErr[0].innerHTML = ""
                checkContent = true
            }
        }

        const CheckQualification = () => {
            var data = encodeURI($qualification.getData());
            if (data === '') {
                $qualificationErr[0].innerHTML = "*Please enter Job Qualification."
            } else if (data.length > 10000) {
                $qualificationErr[0].innerHTML = "*Max lenght 10000."
            } else {
                $qualificationErr[0].innerHTML = ""
                checkQualification = true
            }
        }

        const OnNewJob = () => {
            CheckTitle();
            CheckLocation();
            CheckEndDate();
            CheckMinSal();
            CheckMaxSal();
            CheckLevel();
            CheckContent();
            CheckQualification();

            console.log(checkTitle)
            console.log(checkLocation)
            console.log(checkEnDate)
            console.log(checkMinSal)
            console.log(checkMaxSal)
            console.log(checkLevel)
            console.log(checkContent)
            console.log(checkQualification)
            if (!checkTitle || !checkLocation || !checkEnDate || !checkMinSal ||
                !checkMaxSal || !checkLevel || !checkContent || !checkQualification) {
                return;
                }

            const Title = $title.val()
            const Location = $location.val()
            const PostedDate = FormatDate(new Date().toUTCString());
            const EndDate = FormatDate($endDate.val())
            const SalaryMin = $salaryMin.val()
            const SalaryMax = $salaryMax.val()
            const LevelId = $level.val()
            const Content = encodeURI($content.getData());
            const Qualification = encodeURI($qualification.getData());

            const job = {
                Title,
                Location,
                PostedDate,
                EndDate,
                SalaryMin,
                SalaryMax,
                LevelId,
                Content,
                Qualification
            }
            BlockUI()

            $.ajax({
                type: "POST",
                url: "/admin/job/NewJob",
                data: job ,
                dataType: "json",
                success: function (res) {
                    UnBlockUI()
                    OnSetupToast(res, $liveToast, $toastMes)
                    if (res.IsSuccess) {
                        location.reload()
                    }
                },
                error: function (jqXHR, err, errorThrown) {
                    UnBlockUI()
                    OnServerErr($liveToast, $toastMes);
                }
            });
        }

        const OnChangeJobStatus = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            const Id = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-job'))
            const Status = !data.Status
            const job = { Id, Status }
            BlockUI()

            $.ajax({
                type: "POST",
                url: "/admin/job/ChangeJobStatus",
                data: job,
                dataType: "json",
                success: function (res) {
                    UnBlockUI()
                    if (res.IsSuccess) {
                        OnSetupToast(res, $liveToast, $toastMes)
                        e.target.setAttribute('data-job', JSON.stringify(res.Data))
                        e.target.hidden = !res.Data.Status
                        $jobTable[0].rows[RowIndex].children[6].innerHTML = `<span class="badge bg-${res.Data.StatusType.BadgeCss}">${res.Data.StatusType.Name}</span>`;
                    }
                },

                error: function (jqXHR, err, errorThrown) {
                    UnBlockUI()
                    OnServerErr($liveToast, $toastMes);
                }
            });
        }

        let RowIndex = 0;
        let CurrentId = 0;
        let CurrentSelection = ''
        const OnSelectRowJob = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            CurrentSelection = e.target
            CurrentId = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-job'))
            $titleUpdate.val(data.Title)
            $locationUpdate.val(data.Location)
            $endDateUpdate[0].valueAsNumber = Date.parse(data.EndDate)
            $salaryMinUpdate.val(data.SalaryMin)
            $salaryMaxUpdate.val(data.SalaryMax)

            for (var i = 0; i < $levelUpdate[0].length; i++) {
                if ($levelUpdate[0].options[i].innerHTML == data.LevelName) {
                    $levelUpdate[0].options[i].selected = true;
                }
            }

            $contentUpdate.setData(decodeURI(data.Content))
            $qualificationUpdate.setData(decodeURI(data.Qualification))
        }

        const CheckTitleUpdate = () => {
            var data = $titleUpdate.val()
            if (data === '') {
                $titleUpdateErr[0].innerHTML = "*Please enter Job Title."
            } else if (data.length > 1000) {
                $titleUpdateErr[0].innerHTML = "*Max lenght 1000."
            } else {
                $titleUpdateErr[0].innerHTML = ""
                checkTitleUpdate = true
            }
        }

        const CheckLocationUpdate = () => {
            var data = $locationUpdate.val()
            if (data === '') {
                $locationUpdateErr[0].innerHTML = "*Please enter Job Location."
            } else if (data.length > 1000) {
                $locationUpdateErr[0].innerHTML = "*Max lenght 1000."
            } else {
                $locationUpdateErr[0].innerHTML = ""
                checkLocationUpdate = true
            }
        }

        const CheckEndDateUpdate = () => {
            var data = $endDateUpdate.val()
            if (data === '') {
                $endDateUpdateErr[0].innerHTML = "*Please enter Job End Date."
            } else {
                $endDateUpdateErr[0].innerHTML = ""
                checkEnDateUpdate = true
            }
        }

        const CheckMinSalUpdate = () => {
            const data = $salaryMinUpdate.val()
            if (data <= 0) {
                $salaryMinUpdate.val(0)
                $salaryMinUpdateErr[0].innerHTML = "*Please enter Min Salary."
            } else if (data > 5000) {
                $salaryMinUpdate.val(5000)
            } else {
                $salaryMinUpdateErr[0].innerHTML = ""
                checkMinSalUpdate = true
            }
        }

        const CheckMaxSalUpdate = () => {
            const data = $salaryMaxUpdate.val()
            if (data <= 0) {
                $salaryMaxUpdate.val(0)
                $salaryMaxUpdateErr[0].innerHTML = "*Please enter Max Salary."
            } else if (data > 5000) {
                $salaryMaxUpdate.val(5000)
            } else {
                $salaryMaxUpdateErr[0].innerHTML = ""
                checkMaxSalUpdate = true
            }
        }

        const CheckLevelUpdate = () => {
            var data = $levelUpdate.val()
            if (data == 0) {
                $levelUpdateErr[0].innerHTML = "*Please select Level."
            } else {
                $levelUpdateErr[0].innerHTML = ""
                checkLevelUpdate = true
            }
        }

        const CheckContentUpdate = () => {
            var data = encodeURI($contentUpdate.getData());
            if (data === '') {
                $contentUpdateErr[0].innerHTML = "*Please enter Job Content."
            } else if (data.length > 10000) {
                $contentUpdateErr[0].innerHTML = "*Max lenght 10000."
            } else {
                $contentUpdateErr[0].innerHTML = ""
                checkContentUpdate = true
            }
        }

        const CheckQualificationUpdate = () => {
            var data = encodeURI($qualificationUpdate.getData());
            if (data === '') {
                $qualificationUpdateErr[0].innerHTML = "*Please enter Job Qualification."
            } else if (data.length > 10000) {
                $qualificationUpdateErr[0].innerHTML = "*Max lenght 10000."
            } else {
                $qualificationUpdateErr[0].innerHTML = ""
                checkQualificationUpdate = true
            }
        }

        const OnUpdateJob = () => {
            CheckTitleUpdate();
            CheckLocationUpdate();
            CheckEndDateUpdate();
            CheckMinSalUpdate();
            CheckMaxSalUpdate();
            CheckLevelUpdate();
            CheckContentUpdate();
            CheckQualificationUpdate();

            if (!checkTitleUpdate || !checkLocationUpdate || !checkEnDateUpdate || !checkMinSalUpdate ||
                !checkMaxSalUpdate || !checkLevelUpdate || !checkContentUpdate || !checkQualificationUpdate) {
                return;
            }

            const Id = CurrentId
            const Title = $titleUpdate.val()
            const Location = $locationUpdate.val()
            const EndDate = FormatDate($endDateUpdate.val())
            const SalaryMin = $salaryMinUpdate.val()
            const SalaryMax = $salaryMaxUpdate.val()
            const LevelId = $levelUpdate.val()
            const Content = encodeURI($contentUpdate.getData());
            const Qualification = encodeURI($qualificationUpdate.getData());
            const job = {
                Id,
                Title,
                Location,
                EndDate,
                SalaryMin,
                SalaryMax,
                LevelId,
                Content,
                Qualification
            }

            console.log(job)
            const rowIndex = RowIndex
            BlockUI()

            $.ajax({
                type: "POST",
                url: "/admin/Job/UpdateJob",
                data: { job, rowIndex },
                dataType: "json",
                success: function (res) {
                    UnBlockUI()
                    OnSetupToast(res, $liveToast, $toastMes)
                    console.log(res.Data)
                    if (res.IsSuccess) {
                        $jobTable[0].rows[RowIndex].children[1].innerHTML = res.Data.Title;
                        $jobTable[0].rows[RowIndex].children[2].innerHTML = res.Data.Location;
                        $jobTable[0].rows[RowIndex].children[3].innerHTML = res.Data.PostedDateTimeStamp;
                        $jobTable[0].rows[RowIndex].children[4].innerHTML = res.Data.EndDateTimeStamp;
                        $jobTable[0].rows[RowIndex].children[5].innerHTML = res.Data.Salary;
                        CurrentSelection.setAttribute('data-job', JSON.stringify(res.Data))
                        CurrentSelection.parentElement.children[1].setAttribute('data-job', JSON.stringify(res.Data))
                    }
                },
                error: function (jqXHR, err, errorThrown) {
                    UnBlockUI()
                    OnServerErr($liveToast, $toastMes);
                }
            });
        }

        //const OnViewHr = (e) => {
        //    const data = JSON.parse(e.target.getAttribute('data-hr'))
        //    $nameView[0].innerHTML = data.Name
        //    $emailView[0].innerHTML = data.Email
        //    $contactView[0].innerHTML = data.Contact
        //    $educationView[0].innerHTML = data.Education
        //    $addressView[0].innerHTML = data.Address
        //    $experienceView[0].innerHTML = data.Experience
        //}

        //$updateHr[0].addEventListener('hidden.bs.modal', function (event) {
        //    OnClearFormUpdateHr();
        //})

        //const OnClearFormUpdateHr = () => {
        //    $nameUpdate.val("")
        //    $emailUpdate.val("")
        //    $contactUpdate.val("")
        //    $educationUpdate.val("")
        //    $addressUpdate.val("")
        //    $experienceUpdate.val("")
        //}

        //const OnClearFormNewHr = () => {
        //    $name.val("")
        //    $email.val("")
        //    $contact.val("")
        //    $education.val("")
        //    $address.val("")
        //    $experience.val("")
        //}
    </script>
}

