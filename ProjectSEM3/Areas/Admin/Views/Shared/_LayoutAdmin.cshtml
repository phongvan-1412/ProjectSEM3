<!DOCTYPE html>

<html>
<head>
    @Scripts.Render("~/bundles/modernizr")
    @Html.Partial("_HeadPartial")
    <title>@ViewData["Title"] Admin</title>
</head>
<body>
    @Html.Partial("_SidebarAdminPartial")
    <main class="main-wrapper">
        @Html.Partial("_TopBarAdminPartial")
        @RenderBody()
    </main>
    <div id="blockUi" class="modal-backdrop" style="background-color: rgba(0, 0, 0, 0.20); z-index: 8888" hidden>
        <div class="d-flex justify-content-center" style="margin-top:300px">
            <div class="spinner-grow spinner-grow-sm text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="spinner-grow spinner-grow-sm text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="spinner-grow spinner-grow-sm text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="spinner-grow spinner-grow-sm text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="spinner-grow spinner-grow-sm text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

    @*toast*@
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999;">
        <div id="liveToast" class="toast hide text-black">
            <div class="toast-header">
                <img src="~/Content/img/signature.png" style="width:30px; height:18px" class="rounded me-2" alt="...">
                <strong class="me-auto"></strong>
                <small></small>
                <button type="button" class="btn-close float-end" onclick="OnHideToast()" data-bs-dismiss="toast"></button>
            </div>

            <div class="toast-body" id="toastMes">

            </div>
        </div>
    </div>


    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Content/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/js/Chart.min.js"></script>
    <script src="~/Content/js/dynamic-pie-chart.js"></script>
    <script src="~/Content/js/moment.min.js"></script>
    <script src="~/Content/js/fullcalendar.js"></script>
    <script src="~/Content/js/jvectormap.min.js"></script>
    <script src="~/Content/js/world-merc.js"></script>
    <script src="~/Content/js/polyfill.js"></script>
    <script src="~/Content/js/mainAdmin.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/fixedcolumns/4.2.2/js/dataTables.fixedColumns.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.3.1/mdb.min.js"></script>
    <script>
        const $notificationView = $("#notificationView")
        const $countNotification = $("#countNotification")

        const CompareArray = (arr1,arr2) => {
            return JSON.stringify(arr1) === JSON.stringify(arr2)
        }

        const SetLocal = (name,data) => {
            localStorage.setItem(name, JSON.stringify(data))
        }

        const GetLocal = (name) => {
            return JSON.parse(localStorage.setItem(name))
        }

        const UpdateNotification = () => {
            var localPendingCv = JSON.parse(localStorage.getItem("PendingCv"))

            $.ajax({
                type: "POST",
                url: "/admin/cv/GetPendingCv",
                dataType: "json",
                success: function (res) {
                    if (res.IsSuccess && !CompareArray(localPendingCv, res.Data)) {
                        $countNotification[0].innerHTML = res.Data.length;
                        let template = ""
                        for (var item of res.Data) {
                            var link = `https://localhost:44376/admin/cv/View/${item.Id}`
                            template +=
                                `
                                         <li onclick="test(event)" class="pointer">
                                         <a href="${link}">
                                             <div class="content">
                                                 <h6>
                                                    ${item.Name}
                                                     <span class="text-regular">
                                                         Apply Cv at
                                                     </span>
                                                 </h6>
                                                 <p>${item.JobTitle}</p>
                                                 <span>10 mins ago</span>
                                             </div>
                                         </a>
                                     </li>
                                    `
                        }
                        $notificationView.empty();
                        $notificationView[0].innerHTML = template
                        SetLocal("PendingCv", res.Data)
                    }
                },
                error: function (jqXHR, err, errorThrown) {

                }
            });
        }
        setInterval(UpdateNotification, 5000)

        const BlockUI = () => {
            $("#blockUi")[0].removeAttribute("hidden", false)
        }

        const UnBlockUI = () => {
            $("#blockUi")[0].setAttribute("hidden", true)
            setTimeout(OnHideToast, 3000)
        }

        const OnHideToast = () => {
            $liveToast.hide()
        }

        const OnSetupToast = (res, $toast, $toastMes) => {
            if (res.IsSuccess) {
                OnRemoveClassName($toast, "bg-danger-subtle")
                OnAddClassName($toast, "bg-primary-subtle");
            } else {
                OnRemoveClassName($toast, "bg-primary-subtle");
                OnAddClassName($toast, "bg-danger-subtle")
            }
            $toastMes[0].innerHTML = res.Mes
            $toast.show()
        }

        const OnAddClassName = (ele, className) => {
            if (!ele[0].classList.contains(className)) {
                ele[0].classList.add(className);
            }
        }

        const OnRemoveClassName = (ele, className) => {
            ele[0].classList.remove(className);
        }

        const OnServerErr = ($toast, $toastMes) => {
            OnRemoveClassName($toast, "bg-primary-subtle");
            OnAddClassName($toast, "bg-danger-subtle")
            $toastMes[0].innerHTML = "Connection fail or Something wrong in server."

        }

        const FormatDate = (date) => {
            var formatedDate = moment(date).format('YYYY/MM/DD HH:MM:SS');
            return formatedDate;
        }

        const CheckLogin = () => {
            let localAdmin = JSON.parse(localStorage.getItem("admin"))
            console.log(localAdmin)
            if (localAdmin == null) {
                window.location.href = "https://localhost:44376/Admin/Home/Login"
            }
        }

    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
