
@{
    ViewBag.Title = "Cv";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container">
    <h1>CV</h1>

    <div class="me-4">
        @Html.Partial("~/Areas/Admin/Views/Shared/Partials/Cv/_PartialView.cshtml")
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
        const $name = $("#name")
        const $id = $("#id")
        const $email = $("#email")
        const $contact = $("#contact")
        const $address = $("#address")
        const $level = $("#level")
        const $levelId = $("#levelId")
        const $filePath = $("#filePath")
        const $cvId = $("#cvId")

        const $cvTable = $("#cvTable")
        const $liveToast = $("#liveToast")
        const $toastMes = $("#toastMes")

        $cvTable.DataTable();

        let RowIndex = 0;
        let CurrentId = 0;
        let CurrentSelection = ''

        const OnSelectRowCv = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            CurrentSelection = e.target
            CurrentId = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-cv'))
            $name.val(data.Name)
            $email.val(data.Email)
            $contact.val(data.Contact)
            $address.val(data.Address)
            $level.val(data.LevelName)
            $levelId.val(data.LevelId)
            $filePath.val(data.FilePath)
            $id.val(data.Id)
        }

        const OnNewContestant = () => {
            const Id = $id.val()
            const Name = $name.val()
            const Email = $email.val()
            const Contact = $contact.val()
            const Address = $address.val()
            const LevelId = $levelId.val()

            const req = {
                Name,
                Email,
                Contact,
                Address,
                LevelId,
                Id
            }
            BlockUI()
            
            $.ajax({
                type: "POST",
                url: "/admin/contestant/NewContestant",
                data: req,
                dataType: "json",
                success: function (res) {
                    OnSetupToast(res, $liveToast, $toastMes)
                    if (res.IsSuccess) {
                        CurrentSelection.hidden = res.Data.StatusType.IsHidden
                        CurrentSelection.parentElement.children[3].hidden = res.Data.StatusType.IsHidden
                        $cvTable[0].rows[RowIndex].children[5].innerHTML = `<span class="${res.Data.StatusType.BadgeCss}">${res.Data.StatusType.Name}</span>`;
                    } 
                    UnBlockUI()
                    setTimeout(OnHideToast, 3000)
                },
                error: function (jqXHR, err, errorThrown) {
                    OnServerErr($liveToast, $toastMes);
                    UnBlockUI()
                    setTimeout(OnHideToast, 3000)
                }
            });
        }

        const OnChangeCvStatus = (e) => {
            RowIndex = e.target.parentElement.parentElement.rowIndex
            const Id = e.target.getAttribute('data-index')
            const data = JSON.parse(e.target.getAttribute('data-cv'))
            const Status = !data.Status
            const cv = { Id, Status }
            BlockUI()
            $.ajax({
                type: "POST",
                url: "/admin/cv/Reject",
                data: cv,
                dataType: "json",
                success: function (res) {
                    OnSetupToast(res, $liveToast, $toastMes)
                    if (res.IsSuccess) {
                        e.target.hidden = res.Data.StatusType.IsHidden
                        e.target.parentElement.children[0].hidden = res.Data.StatusType.IsHidden
                        $cvTable[0].rows[RowIndex].children[5].innerHTML = `<span class="badge bg-${res.Data.StatusType.BadgeCss}">${res.Data.StatusType.Name}</span>`;
                    } 
                    UnBlockUI()
                    setTimeout(OnHideToast, 3000)
                },
                error: function (jqXHR, err, errorThrown) {
                    OnServerErr($liveToast, $toastMes);
                    UnBlockUI()
                    setTimeout(OnHideToast, 3000)
                }
            });

        }

       
    </script>
}