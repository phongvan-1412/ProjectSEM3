@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    <!-- Define countdown time -->
    var endTime = DateTime.UtcNow.AddSeconds(425);
    var timeRemaining = TimeSpan.FromTicks(endTime.Ticks - DateTime.UtcNow.Ticks).TotalSeconds.ToString("#");

    <!-- Get Question List -->
    //var lst = (List<ProjectSEM3.Models.Entities.ExamDetail.Res>)ViewData["lstKnowledge"];
    var lst = (ProjectSEM3.Models.Entities.ContestantExam)ViewData["lstExam"];
    var id = (int)ViewData["contestantId"];
}

<div class="quiz-wrapper pt-5">
    @if (TempData["loadExamDetailFailed"] != null)
    {
        <div class="container d-flex flex-column align-items-center justify-content-center" style="height: 100vh; margin-top: -8rem;">
            <img src="https://localhost:44376/Content/img/icons/paper.png" alt="paper" style="width: 230px; height: 230px" />
            <h1 class="mt-3" style="color: rgb(50, 49, 48); font-weight: 600; font-size: 26px;">@TempData["loadExamDetailFailed"]</h1>
            <a href="https://localhost:44376/Home/Index">Go back to Home</a>
        </div>
    }
    else
    {
        <div class="container-fluid" style="z-index: 1">
            <div class="row text-center">
                <div id="jumper-btns" class="d-flex align-items-center justify-content-center mt-3">
                </div>
            </div>

            <div class="container">
                <div id="wizard">

                </div>
            </div>

            <div class="container text-center mt-5 mb-5">
                <div class="d-flex justify-content-evenly align-items-center section-wrapper">
                    <div class="d-flex flex-column justify-content-center text-center">
                        <div>
                            <button type="button" class="btn" style="display: inline;">1</button>
                        </div>
                        <div class="mt-3">
                            <span style="color: #000a38; font-size: 1rem">General Knowledge</span>
                        </div>
                    </div>
                    <div class="d-flex flex-column justify-content-center text-center">
                        <div>
                            <button type="button" class="btn" style="display: inline;">2</button>
                        </div>
                        <div class="mt-3">
                            <span style="color: #000a38; font-size: 1rem">Mathematics</span>
                        </div>
                    </div>
                    <div class="d-flex flex-column justify-content-center text-center">
                        <div>
                            <button type="button" class="btn" style="display: inline;">3</button>
                        </div>
                        <div class="mt-3">
                            <span style="color: #000a38; font-size: 1rem">Computer Technology</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="d-flex text-center justify-content-center align-items-center timer-wrapper">
                <div>
                    <span id="minRemaining"></span>
                </div>
                <div>
                    <span>:</span>
                </div>
                <div>
                    <span id="secRemaining"></span>
                </div>
            </div>
        </div>

    }
</div>

@section scripts{
    <script type="text/javascript">
    var contestantId = @id;

    if (contestantId == localStorage.getItem("contestant")) {
        localStorage.removeItem("tempName");
    }

    localStorage.removeItem("data")
    /*-----------------------------------
        Countdown
    -------------------------------------*/
    var remSeconds = @timeRemaining;
    var secCounter = remSeconds % 60;

    function formatNumber(number) {
        if (number < 10) return '0' + number;
        else return '' + number;
    }
    function startTick() {
            document.getElementById("secRemaining").innerText = formatNumber(secCounter);
            document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));

        var _tick = setInterval(function () {
            if (remSeconds > 0 && secCounter == 0) {
                remSeconds = remSeconds - 1;
                secCounter = 60 - 1;
                document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
            }
            else if (remSeconds > 0 && secCounter != 0) {
                 remSeconds = remSeconds - 1;
                 secCounter = secCounter - 1;
                 document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                 document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
                 if (secCounter == 0)
                    secCounter = 60;
            }
            else {
                    alert('Times out!');
                    clearInterval(_tick);
                }
            }, 1000);
    }
    startTick();

    /*-----------------------------------
        Create json
    -------------------------------------*/
    var data = @Html.Raw(Json.Encode(lst));
    console.log(data);

    localStorage.setItem("data", JSON.stringify(data));
    let lstTemp = [];
    let tempName = "";


    /*  -------------- Reset Temp --------------*/
    function resetTemp(name) {
        if (name == null) {
            name = "Knowledge"
        }
        var d = JSON.parse(localStorage.getItem("data"));
        tempName = name;
        localStorage.setItem("tempName", name);

        if (name == "Knowledge") {
            lstTemp = d.Knowledge;
        } else if (name == "Math") {
            lstTemp = d.Math;
        } else {
            lstTemp = d.Computer;
        }


    };
    function setTemp(name) {
        var d = JSON.parse(localStorage.getItem("data"));

        if (name == "Knowledge") {
            d.Knowledge = lstTemp;
        } else if (name == "Math") {
            d.Math = lstTemp;
        } else {
            d.Computer = lstTemp;
        }
        localStorage.setItem("data", JSON.stringify(d));
    }
    let temp = localStorage.getItem("tempName");

    resetTemp(temp);

    /*-----------------------------------
        Handle Content
    -------------------------------------*/
    let container = document.getElementById("wizard");
    let jumper = document.getElementById("jumper-btns");

    let question;
    let index;
    let selectedAnswer = {};
    let localChoice;

    function jumpButtons() {
        let btns = ``;
        for (let i = 0; i < lstTemp.length; i++) {
            btns += `
                <div class="step bg-white ${i == index ? "finish" : ""} d-flex align-items-center justify-content-center" onclick="showQuestion(${i})" style="cursor: pointer">
                    <div class="d-flex align-items-center justify-content-center">${i + 1}</div>
                </div>
            `;
        }
        jumper.innerHTML = btns;
    };

    /*-------------- Single & Multi Choice --------------*/
    function showAnswer() {
        let options = ``;
        var convertOptionsToArray = JSON.parse(question.Options);

        for (var i = 0; i < convertOptionsToArray.length; i++) {
            let option = convertOptionsToArray[i];
            let selected = false;

            if (lstTemp[index].IsMultiAnwser == false) {
                if (lstTemp[index].Answer != "") {
                    let singleAnswer = JSON.parse(lstTemp[index].Answer);
                    if (singleAnswer[0] == option) {
                        selected = true;
                    }
                }
                options += `
                    <div class="answer-container rounded-pill bg-white text-start">
                        <input type="radio" onclick="addAnswer()" name="answer-btn" class="choice" ${selected ? "checked = 'true'" : ""} value="${option}">${option}
                    </div>
                `;

            }
            else {
                for (var j = 0; j < lstTemp[index].Answer.length; j++) {
                    if (lstTemp[index].Answer != "") {
                        let multiAnswer = JSON.parse(lstTemp[index].Answer);

                        for (var f = 0; f < multiAnswer.length; f++) {
                            if (multiAnswer[f] == option) {
                                selected = true;
                            }
                        }

                    }
                }
                options += `
                    <div class="answer-container rounded-pill bg-white text-start">
                        <input type="checkbox" onclick="addAnswer()" name="answer-btn" class="choice" ${selected ? "checked = 'true'" : ""} value="${option}">${option}
                    </div>
                `;
            }
        }
        localChoice = document.getElementsByClassName("choice");
        return options;
    };
    function addAnswer() {
        var j = [];

        for (var i = 0; i < localChoice.length; i++) {
            if (localChoice[i].checked == true) {
                j.push(localChoice[i].value)
            }
        }
        if (j.length != 0) {
            lstTemp[index].Answer = JSON.stringify(j);
        }
        setTemp(tempName);
        //var k = JSON.parse(localStorage.getItem("data"))
        //console.log(k)
    };

    /*-------------- Cross Choice --------------*/
    let displayCrossChoice;
    let answerCrossChoice;

    function showCrossAnswer() {
        let options = ``;
        let questCross = ``;
        let ansCross = ``;

        let convertOptionsToArray = JSON.parse(question.Options);

        let localQuest = [];

        if (question.TypeId == 2) {

            for (var i = 0; i < 4; i++) {
                let temp = [];
                temp.push(convertOptionsToArray[0][i]);
                temp.push("");
                localQuest.push(temp);
            }

            for (var i = 0; i < convertOptionsToArray[0].length; i++) {
                let qCross = convertOptionsToArray[0][i];

                questCross += `
                    <div class="rounded-pill bg-white text-end d-flex align-items-center" style="width: 100%; height: 3.5rem; margin-bottom: 1rem; padding: 0 1rem 0 9.5rem;">
                        <div style="margin-right: 1rem;">
                            ${qCross}
                        </div>
                            <input type="radio" onclick="addCrossQuestion(event)" name="question" value="${qCross}" style="margin-right: 0"/>
                    </div>
                `;
            }

            for (var i = 0; i < convertOptionsToArray[1].length; i++) {
                let aCross = convertOptionsToArray[1][i];

                for (var k = 0; k < lstTemp[index].Answer.length; k++) {
                    if (lstTemp[index].Answer[k][1] == aCross) {
                        selectedAns = true;
                    }
                }
                ansCross += `
                    <div class="rounded-pill bg-white text-start d-flex align-items-center" style="width: 100%; height: 3.5rem; margin-bottom: 1rem; padding: 0 5rem 0 1.5rem;">
                        <input type="radio" onclick="addCrossAnswer(event)" name="answerCross" class="answerCross" value="${aCross}"/>
                        <div>${aCross}</div>
                    </div>
                `;
            }

            options = `
                <div class="d-flex align-items-center justify-content-evenly">
                    <div class="question-container d-flex flex-column">
                        ${questCross}
                    </div>
                    <div class="answer-container d-flex flex-column">
                        ${ansCross}
                    </div>
                </div>
                <div id="displayCross" class="d-flex flex-column align-items-center justify-content-center mt-3">

                </div>
            `;

            if (lstTemp[index].Answer == "" || lstTemp[index].Answer == null) {
                lstTemp[index].Answer = JSON.stringify(localQuest);
            } 

            //console.log(lstTemp)
        }
        return options;
    }

    let tmpQuestion = ''
    let tmpAnswer = ''

    function addCrossQuestion(e) {
        tmpQuestion = e.target.value;
        onSelectCross();
    };
    function addCrossAnswer(e) {
        tmpAnswer = e.target.value
        onSelectCross()
    };
    function displayCross() {

        displayCrossChoice.innerHTML = "";
        var convertAnswersToArray = question.Answer;
        if (convertAnswersToArray != "") {
            for (var i = 0; i < JSON.parse(convertAnswersToArray).length; i++) {
                if (JSON.parse(convertAnswersToArray)[i][1] != "") {
                    displayCrossChoice.innerHTML += `
                        <div class="d-flex align-items-center justify-content-center">
                            <span class="me-3 text-dark">Question "${JSON.parse(convertAnswersToArray)[i][0]}": </span>
                            <span>${JSON.parse(convertAnswersToArray)[i][1]}</span>
                        </div>
                    `;
                }
            }
        }
        };
    function onSelectCross() {
        var convertAnswerToArray = JSON.parse(lstTemp[index].Answer);
        if (tmpQuestion == '' || tmpAnswer == '') {
            return;
        }

        for (var item of convertAnswerToArray) {
            if (item[1] == tmpAnswer) {
                item[1] = "";
            }
        }

        for (var item of convertAnswerToArray) {
            if (item[0] == tmpQuestion) {
                item[1] = tmpAnswer;
            }
            lstTemp[index].Answer = JSON.stringify(convertAnswerToArray);
        }

        displayCross();
        tmpAnswer = ''
        for (var i = 0; i < answerCrossChoice.length; i++) {
            answerCrossChoice[i].checked = false;
        }
       
        question.Answer = JSON.stringify(convertAnswerToArray);
        setTemp(tempName);
    };

    /*-------------- Ranking Choice --------------*/
        let selectedElement;
        let dropElement;

        function showRakingAnswer(data) {
            let options = ``;
            for (var i = 0; i < 4; i++) {
                let option = "";
                if (data != null) {
                    option = data[i]
                    options += `
                        <div class="rounded-pill bg-white d-flex align-items-center text-start mt-3" ondragover='OnDragOver(event)' ondragend='OnDrop(event)' draggable=true style="width: 100%; height: 56px; padding-left: 20px; cursor:grab">
                            <span class="rankingLists d-flex align-items-center text-dark fw-normal" ondragstart="OnDragStart(event)"  draggable=true style="width: 100%; padding: 0 0 0 20px; cursor:grab; font-size: 14px">
                                ${option}
                            </span>
                        </div>
                    `;
                } else {
                    options += `
                        <div class="rounded-pill bg-white d-flex align-items-center text-start mt-3" ondragover='OnDragOver(event)' ondragend='OnDrop(event)' draggable=true style="width: 100%; height: 56px; padding-left: 20px; cursor:grab">
                            
                        </div>
                    `;
                }
            }
            rankingLists = document.getElementsByClassName("rankingLists");

            return options;
        };
        function OnDragStart(e) {
            selectedElement = e.target;
        };
        function OnDragOver(e) {
            dropElement = e.target;
            e.preventDefault();
        };
        function OnDrop() {
            let localRankingChoice = [];

            if (dropElement.children.length == 0 && dropElement.tagName === "DIV") {
                dropElement.appendChild(selectedElement);
              
            }

            for (var i = 0; i < rightBox.children.length; i++) {
                if (rightBox.children[i].children[0]) {
                    localRankingChoice.push(rightBox.children[i].children[0].innerHTML.trim())
                }
            }

            question.Answer = JSON.stringify(localRankingChoice)
            setTemp(tempName);
        };

    /*  -------------- Question --------------*/
    function submitQuiz() {
        var checkLocal = JSON.parse(localStorage.getItem("data"));
        console.log(checkLocal)
        //for (var i = 0; i < lstTemp.length; i++) {
        //    if (lstTemp[i].Answer == "") {
        //        alert(`You haven't chosen answer for question ${lstTemp[i].Content}`)
        //        break;
        //    }
        //}
        if (tempName == "Knowledge") {
            resetTemp("Math");
            showQuestion(0);
        }
        else if (tempName == "Math") {
            resetTemp("Computer");
            showQuestion(0);
        }
        else {
            $.ajax({
                type: "POST",
                data: { result: JSON.parse(localStorage.getItem("data")), contestantId: parseInt(localStorage.getItem("contestant")) },
                dataType: "json",
                url: "/Quiz/Submit",
                success: function (result) {
                    console.log(result);
                    localStorage.removeItem("contestant");
                },
                error: function (req, status, error) {
                    console.log(error);
                }
            });
        }

    };
    function showQuestion(i) {
        index = i;
        if (lstTemp[i]) {
            jumpButtons();
            question = lstTemp[i];

            let options = showAnswer();
            let optionsCross = showCrossAnswer()
            let optionRankingLeft = showRakingAnswer(JSON.parse(question.Options));
            let optionRankingRight = "";
            console.log(question.Answer)
            if (question.Answer == "") {
                optionRankingRight = showRakingAnswer(null)
            } else {
                let answerArr = JSON.parse(question.Answer);
                for (var i = 0; i < answerArr.length; i++) {
                    console.log(answerArr[i])
                }
                optionRankingRight = showRakingAnswer(JSON.parse(question.Answer))
            }

            container.innerHTML = `
                <div id="questDisplay" class="multisteps_form_panel">
                    <div class="d-flex align-items-center justify-content-center">
                        <span class="question_number text-uppercase d-flex justify-content-center align-items-center">
                            Question
                            <span id="question-number" class="d-flex justify-content-center ms-1" style="margin-top: 16px">${index + 1}</span>/${lstTemp.length}
                        </span>
                    </div>

                    <h1 class="question_title text-center">${question.Content} </h1>

                    ${question.TypeId == 1
                    ? `
                        <div class="form_items d-flex flex-column justify-content-center">
                            ${options}
                        </div>
                    ` : ``}
                    ${question.TypeId == 2
                    ? `
                        <div class="form_items d-flex flex-column justify-content-center">
                            ${optionsCross}
                        </div>
                    ` : ``}
                    ${question.TypeId == 3
                    ? `
                        <div class="d-flex justify-content-center">
                            <div id="left" class="form_items d-flex flex-column justify-content-center">
                                ${optionRankingLeft}
                            </div>
                            <div id="right" class="form_items d-flex flex-column justify-content-center" ondrop='OnDrop(event)'>
                                ${optionRankingRight}
                            </div>
                        </div>
                        ` : ``}

                </div>

                <div class="form_btn action-btns text-center ms-5 mt-5">
                    ${index > 0 ? `<button type="button" onclick="showQuestion(${index - 1})" class="f_btn text-uppercase rounded-pill border-0" style="display: inline;">Prev Question</button>` : ""}
                    ${index + 1 < lstTemp.length ?
                    `<button type="button" onclick="showQuestion(${index + 1})" class="f_btn text-uppercase rounded-pill border-0">Next Question</button>`
                    :
                    `<button type="submit" onclick="submitQuiz()" class="f_btn text-uppercase rounded-pill border-0">Submit</button>`}
                </div>
            `;
        }

        if (question.TypeId == 2) {
            displayCrossChoice = document.getElementById("displayCross");
            answerCrossChoice = document.getElementsByClassName("answerCross");
            console.log(question.Answer)

            displayCross();
        }
        if (question.TypeId == 3) {
            rightBox = document.getElementById("right");
            leftBox = document.getElementById("left");
        }
    };

    showQuestion(0);

    </script>
}

