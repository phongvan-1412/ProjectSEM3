@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    <!-- Define countdown time -->
    var endTime = DateTime.UtcNow.AddSeconds(425);
    var timeRemaining = TimeSpan.FromTicks(endTime.Ticks - DateTime.UtcNow.Ticks).TotalSeconds.ToString("#");

    <!-- Get Question List -->
    //var lst = (List<ProjectSEM3.Models.Entities.ExamDetail.Res>)ViewData["lstKnowledge"];
    var lst = (ProjectSEM3.Models.Entities.ContestantExam)ViewData["lstExam"];
}

<div class="quiz-wrapper pt-5">
    @if (TempData["loadExamDetailFailed"] != null)
    {
        <div class="container d-flex flex-column align-items-center justify-content-center" style="height: 100vh; margin-top: -8rem;">
            <img src="https://localhost:44376/Content/img/icons/paper.png" alt="paper" style="width: 230px; height: 230px" />
            <h1 class="mt-3" style="color: rgb(50, 49, 48); font-weight: 600; font-size: 26px;">@TempData["loadExamDetailFailed"]</h1>
            <a href="https://localhost:44376/Home/Index">Go back to Home</a>
        </div>
    }
    else
    {
        <div class="container-fluid" style="z-index: 1">
            <div class="row text-center">
                <div id="jumper-btns" class="d-flex align-items-center justify-content-center mt-3">
                </div>
            </div>

            <div class="container">
                <div id="wizard">

                </div>
            </div>

            <div class="container text-center mt-5 mb-5">
                <div class="d-flex justify-content-evenly align-items-center section-wrapper">
                    <div class="d-flex flex-column justify-content-center text-center">
                        <div>
                            <button type="button" class="btn" style="display: inline;">1</button>
                        </div>
                        <div class="mt-3">
                            <span style="color: #000a38; font-size: 1rem">General Knowledge</span>
                        </div>
                    </div>
                    <div class="d-flex flex-column justify-content-center text-center">
                        <div>
                            <button type="button" class="btn" style="display: inline;">2</button>
                        </div>
                        <div class="mt-3">
                            <span style="color: #000a38; font-size: 1rem">Mathematics</span>
                        </div>
                    </div>
                    <div class="d-flex flex-column justify-content-center text-center">
                        <div>
                            <button type="button" class="btn" style="display: inline;">3</button>
                        </div>
                        <div class="mt-3">
                            <span style="color: #000a38; font-size: 1rem">Computer Technology</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="d-flex text-center justify-content-center align-items-center timer-wrapper">
                <div>
                    <span id="minRemaining"></span>
                </div>
                <div>
                    <span>:</span>
                </div>
                <div>
                    <span id="secRemaining"></span>
                </div>
            </div>
        </div>

    }
</div>

<script type="text/javascript">
    localStorage.removeItem("lstCheck")
    /*-----------------------------------
        Countdown
    -------------------------------------*/
    var remSeconds = @timeRemaining;
    var secCounter = remSeconds % 60;

    function formatNumber(number) {
        if (number < 10) return '0' + number;
        else return '' + number;
    }
    function startTick() {
            document.getElementById("secRemaining").innerText = formatNumber(secCounter);
            document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));

        var _tick = setInterval(function () {
            if (remSeconds > 0 && secCounter == 0) {
                remSeconds = remSeconds - 1;
                secCounter = 60 - 1;
                document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
            }
            else if (remSeconds > 0 && secCounter != 0) {
                 remSeconds = remSeconds - 1;
                 secCounter = secCounter - 1;
                 document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                 document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
                 if (secCounter == 0)
                    secCounter = 60;
            }
            else {
                    alert('Times out!');
                    clearInterval(_tick);
                }
            }, 1000);
    }
    startTick();

    /*-----------------------------------
        Create json
    -------------------------------------*/
    var data = @Html.Raw(Json.Encode(lst));
    //console.log(data);


    //for (var i = 0; i < data.Knowledge.length; i++) {
    //    var temp = { id: "", question: "", answer: [], IsMultiAnwser: false, type: "", point: "" };
    //    data[i].Options = JSON.parse(data[i].Options);
    //    data[i].CorrectAnwser = JSON.parse(data[i].CorrectAnwser);
    //    temp.id = data[i].QuestionId;
    //    temp.question = data[i].Content;
    //    temp.IsMultiAnwser = data[i].IsMultiAnwser;
    //    temp.type = data[i].TypeId;
    //    temp.point = data[i].Point;
    //    lstTemp.push(temp);
    //}
    //console.log(lstTemp);

    localStorage.setItem("data", JSON.stringify(data));
    let lstTemp = [];
    let tempName = "";


    /*  -------------- Reset Temp --------------*/
    function resetTemp(name) {
        var d = JSON.parse(localStorage.getItem("data"));
        tempName = name;

        if (name == "Knowledge") {
            lstTemp = d.Knowledge;
        } else if (name == "Math") {
            lstTemp = d.Math;
        } else {
            lstTemp = d.Computer;
        }
    };
    function setTemp(name) {
        var d = JSON.parse(localStorage.getItem("data"));

        if (name == "Knowledge") {
            d.Knowledge = lstTemp;
        } else if (name == "Math") {
            d.Math = lstTemp;
        } else {
            d.Computer = lstTemp;
        }
        localStorage.setItem("data", JSON.stringify(d));
    }
    resetTemp("Knowledge");

    /*-----------------------------------
        Handle Content
    -------------------------------------*/
    let container = document.getElementById("wizard");
    let jumper = document.getElementById("jumper-btns");

    let question;
    let index;
    let selectedAnswer = {};
    let localChoice;

    function jumpButtons() {
        let btns = ``;
        for (let i = 0; i < lstTemp.length; i++) {
            btns += `
                <div class="step bg-white ${i == index ? "finish" : ""} d-flex align-items-center justify-content-center" onclick="showQuestion(${i})" style="cursor: pointer">
                    <div class="d-flex align-items-center justify-content-center">${i + 1}</div>
                </div>
            `;
        }
        jumper.innerHTML = btns;
    };

    /*-------------- Single & Multi Choice --------------*/
    function showAnswer() {
        let options = ``;
        var e = JSON.parse(question.Options);

        for (var i = 0; i < e.length; i++) {
            let option = e[i];
            let selected = false;

            if (lstTemp[index].IsMultiAnwser == false) {
                if (lstTemp[index].Answer == option) {
                    selected = true;
                }
                options += `
                    <div class="answer-container rounded-pill bg-white text-start">
                            <input type="radio" onclick="addAnswer()" name="answer-btn" class="choice" ${selected ? "checked = 'true'" : ""} value="${option}">${option}
                    </div>
                `;
            }
            else {
                for (var j = 0; j < lstTemp[index].Answer.length; j++) {
                    if (lstTemp[index].Answer[j] == option) {
                        selected = true;
                    }
                }
                options += `
                    <div class="answer-container rounded-pill bg-white text-start">
                            <input type="checkbox" onclick="addAnswer()" name="answer-btn" class="choice" ${selected ? "checked = 'true'" : ""} value="${option}">${option}
                    </div>
                `;
            }
        }
        localChoice = document.getElementsByClassName("choice");
        return options;
    };
    function addAnswer() {
        var j = [];

        for (var i = 0; i < localChoice.length; i++) {
            if (localChoice[i].checked == true) {
                j.push(localChoice[i].value)
            }
        }

        lstTemp[index].Answer = JSON.stringify(j);
        setTemp(tempName);
        var k = JSON.parse(localStorage.getItem("data"))
        console.log(k)
    };

    /*-------------- Cross Choice --------------*/

    /*  -------------- Question --------------*/
    function submitQuiz() {
        if (tempName == "Knowledge") {
            resetTemp("Math");
            showQuestion(0);

        }
        else if (tempName == "Math") {
            resetTemp("Computer");
            showQuestion(0);
        }
        else {
            $.ajax({
                type: "POST",
                data: { result: localStorage.getItem("data"), contestantId: parseInt(localStorage.getItem("contestant")) },
                dataType: "json",
                url: "/Quiz/Submit",
                success: function (result) {
                    console.log(result);
                    localStorage.removeItem("contestant");
                },
                error: function (req, status, error) {
                    console.log(error);
                }
            });
        }
    };
    function showQuestion(i) {
        index = i;
        if (lstTemp[i]) {
            jumpButtons();
            question = lstTemp[i];
            let options = showAnswer();
            //let optionsCross = showCrossAnswer();

            container.innerHTML = `
                <div id="questDisplay" class="multisteps_form_panel">


                <div class="d-flex align-items-center justify-content-center">
                        <span class="question_number text-uppercase d-flex justify-content-center align-items-center">
                            Question
                            <span id="question-number" class="d-flex justify-content-center ms-1" style="margin-top: 16px">${index + 1}</span>/${lstTemp.length}
                        </span>
                    </div>

                    <h1 class="question_title text-center">${question.Content} </h1>
                    ${question.TypeId == 2
                    ? `
                        <div class="form_items d-flex flex-column justify-content-center">
                            ${optionsCross}
                        </div>`
                    : `
                        <div class="form_items d-flex flex-column justify-content-center">
                            ${options}
                        </div>
                    `}

                </div>

                <div class="form_btn action-btns text-center ms-5 mt-5">
                    ${index > 0 ? `<button type="button" onclick="showQuestion(${index - 1})" class="f_btn text-uppercase rounded-pill border-0" style="display: inline;">Prev Question</button>` : ""}
                    ${index + 1 < lstTemp.length ?
                    `<button type="button" onclick="showQuestion(${index + 1})" class="f_btn text-uppercase rounded-pill border-0">Next Question</button>`
                    :
                    `<button type="submit" onclick="submitQuiz()" class="f_btn text-uppercase rounded-pill border-0">Submit</button>`}
                </div>
            `;
        }
    };

    showQuestion(0);

</script>
@*${question.TypeId == 2*@
@*? `
    <div class="d-flex align-items-center justify-content-center">
        <span class="question_number text-uppercase d-flex justify-content-center align-items-center">
            Question
            <span id="question-number" class="d-flex justify-content-center ms-1" style="margin-top: 16px">${index + 1}</span>/${lstTemp.length}
        </span>
        <button type="button" class="reset-wrapper d-flex align-items-center justify-content-center text-uppercase border-0 ms-3" onclick="reset()">Reset</button>
    </div>
                    `
                    : `
    <div class="d-flex align-items-center justify-content-center">
        <span class="question_number text-uppercase d-flex justify-content-center align-items-center">
            Question
            <span id="question-number" class="d-flex justify-content-center ms-1" style="margin-top: 16px">${index + 1}</span>/${lstTemp.length}
        </span>
    </div>
                    `}*@