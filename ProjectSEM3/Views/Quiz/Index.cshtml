@model List<ProjectSEM3.Models.Entities.Question.Req>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    <!-- Define countdown time -->
    var endTime = DateTime.UtcNow.AddSeconds(425);
    var timeRemaining = TimeSpan.FromTicks(endTime.Ticks - DateTime.UtcNow.Ticks).TotalSeconds.ToString("#");

    <!-- Get Question List -->
    var lst = ViewData["lstQuest"];
}

<div class="quiz-wrapper pt-5">
    <div class="container-fluid" style="z-index: 1">
        <div class="row text-center">
            <div class="col d-flex flex-row justify-content-evenly d-none d-sm-block">
                <span class="step bg-white rounded-pill finish finish"></span>
                <span class="step bg-white rounded-pill active"></span>
                <span class="step bg-white rounded-pill"></span>
                <span class="step bg-white rounded-pill"></span>
                <span class="step bg-white rounded-pill"></span>
            </div>
        </div>

        <div class="container">
            <div id="wizard">
                <div id="questDisplay" class="multisteps_form_panel">
                    <span class="question_number text-uppercase d-flex justify-content-center align-items-center">
                        Question
                        <span id="question-number" class="d-flex justify-content-center ms-1" style="margin-top: 16px">1</span>/5
                    </span>

                    <h1 id="question-content" class="question_title text-center">Quest 1</h1>
                    <div id="answer-button" class="form_items d-flex flex-column justify-content-center">
                        <ul class="answer-input ps-0">
                            <li id="li1" class="rounded-pill bg-white text-start">
                                <input type="radio" id="ip1" name="stp_1_select_option" value="Answer A">
                                <label id="lb_1" for="ip1">Answer A</label>
                            </li>
                            <li id="li2" class="rounded-pill bg-white text-start">
                                <input type="radio" id="ip2" name="stp_1_select_option" value="Answer B">
                                <label id="lb_2" for="ip2">Answer B</label>
                            </li>
                            <li id="li3" class="rounded-pill bg-white text-start">
                                <input type="radio" id="ip3" name="stp_1_select_option" value="Answer C">
                                <label id="lb_3" for="ip3">Answer C</label>
                            </li>
                            <li id="li4" class="rounded-pill bg-white text-start">
                                <input type="radio" id="ip4" name="stp_1_select_option" value="Answer D">
                                <label id="lb_4" for="ip4">Answer D</label>
                            </li>
                        </ul>
                        @*<button id="btn1" class="btn rounded-pill bg-white text-start mb-3" style="height: 50px">Answer A</button>*@
                        @*<button id="btn2" class="btn rounded-pill bg-white text-start mb-3" style="height: 50px">Answer B</button>
                        <button id="btn3" class="btn rounded-pill bg-white text-start mb-3" style="height: 50px">Answer C</button>
                        <button id="btn4" class="btn rounded-pill bg-white text-start" style="height: 50px">Answer D</button>*@

                    </div>
                </div>

                <div class="form_btn text-center ms-5 mt-5">
                    <button type="button" class="f_btn text-uppercase rounded-pill border-0" id="prevBtn" style="display: inline;">Prev Question</button>
                    <button type="button" class="f_btn text-uppercase rounded-pill border-0" id="nextBtn">Next Question</button>
                </div>
            </div>
        </div>

        <div class="container text-center mt-5 mb-5">
            <div class="d-flex justify-content-evenly align-items-center section-wrapper">
                <div class="d-flex flex-column justify-content-center text-center">
                    <div>
                        <button type="button" class="btn" style="display: inline;">1</button>
                    </div>
                    <div class="mt-3">
                        <span style="color: #000a38; font-size: 1rem">General Knowledge</span>
                    </div>
                </div>
                <div class="d-flex flex-column justify-content-center text-center">
                    <div>
                        <button type="button" class="btn" style="display: inline;">2</button>
                    </div>
                    <div class="mt-3">
                        <span style="color: #000a38; font-size: 1rem">Mathematics</span>
                    </div>
                </div>
                <div class="d-flex flex-column justify-content-center text-center">
                    <div>
                        <button type="button" class="btn" style="display: inline;">3</button>
                    </div>
                    <div class="mt-3">
                        <span style="color: #000a38; font-size: 1rem">Computer Technology</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex text-center justify-content-center align-items-center timer-wrapper">
            <div>
                <span id="minRemaining"></span>
            </div>
            <div>
                <span>:</span>
            </div>
            <div>
                <span id="secRemaining"></span>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    localStorage.removeItem("lstResult")
    /*-----------------------------------
        Countdown
    -------------------------------------*/
    var remSeconds = @timeRemaining;
    var secCounter = remSeconds % 60;

    function formatNumber(number) {
        if (number < 10) return '0' + number;
        else return '' + number;
    }
    function startTick() {
            document.getElementById("secRemaining").innerText = formatNumber(secCounter);
            document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));

        var _tick = setInterval(function () {
            if (remSeconds > 0 && secCounter == 0) {
                remSeconds = remSeconds - 1;
                secCounter = 60 - 1;
                document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
            }
            else if (remSeconds > 0 && secCounter != 0) {
                 remSeconds = remSeconds - 1;
                 secCounter = secCounter - 1;
                 document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                 document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
                 if (secCounter == 0)
                    secCounter = 60;
            }
            else {
                    alert('Times out!');
                    clearInterval(_tick);
                }
            }, 1000);
    }
    startTick();

    /*-----------------------------------
        Save Quest list into local storage
    -------------------------------------*/
    var lstQuest = @Html.Raw(Json.Encode(lst));
    var data = lstQuest.Data;
    console.log(data);
    let index = 0;
    let score = 0;

    /*-----------------------------------
        Handle Content
    -------------------------------------*/

    var questNum = document.getElementById("question-number");
    const question = document.getElementById("question-content");
    const answer = document.getElementById("answer-button");
    const ip1 = document.getElementById("ip1");
    const ip2 = document.getElementById("ip2");
    const ip3 = document.getElementById("ip3");
    const ip4 = document.getElementById("ip4");
    const lb1 = document.getElementById("lb_1");
    const lb2 = document.getElementById("lb_2");
    const lb3 = document.getElementById("lb_3");
    const lb4 = document.getElementById("lb_4");
    const li1 = document.getElementById("li1");
    const li2 = document.getElementById("li2");
    const li3 = document.getElementById("li3");
    const li4 = document.getElementById("li4");
    const nextButton = document.getElementById("nextBtn");
    const prevButton = document.getElementById("prevBtn");
    let answerContent = "";
    var result = { id: "", question: "", answer: "" };
    var lstResult = [];

    function startQuiz() {
        index = 0;
        score = 0;
        showQuestion();
    };
    function showQuestion() {
        let currentQuestion = data[index].Content;
        let questNo = index + 1;

        /*----------------------------------- Display/Hide/Change button content -------------------------------------*/
        if (index >= 1) {
            prevButton.style.display = "inline";
        }
        else {
            prevButton.style.display = "none";
        }

        if (index == 2) {
            nextButton.innerHTML = "Submit";
        }
        else {
            nextButton.innerHTML = "Next Question";
        }

        /*----------------------------------- Display content -------------------------------------*/
        questNum.innerHTML = questNo;
        question.innerHTML = currentQuestion;

        /*---------- Answer A ----------*/
        ip1.value = data[index].A;
        lb1.innerHTML = data[index].A;
        li1.addEventListener("click", selectAnswer);

        /*---------- Answer B ----------*/
        ip2.value = data[index].B;
        lb2.innerHTML = data[index].B;
        li2.addEventListener("click", selectAnswer);

        /*---------- Answer C ----------*/
        ip3.value = data[index].C;
        lb3.innerHTML = data[index].C;
        li3.addEventListener("click", selectAnswer);


        /*---------- Answer D ----------*/
        ip4.value = data[index].D;
        lb4.innerHTML = data[index].D;
        li4.addEventListener("click", selectAnswer);

    }
    function selectAnswer(e) {
        const selectedBtn = e.target;
        console.log(selectedBtn.style);
        if (selectedBtn.id === "li1") {
            //selectedBtn.classList.remove("bg-white");
            //selectedBtn.style.backgroundColor = "#ffc533";
            answerContent = selectedBtn.innerHTML;
        }
    };
    function saveResult() {
        result.id = index;
        result.question = question.innerHTML;
        result.answer = answerContent;
        if (lstResult == null || lstResult == "") {
            lstResult.push(result);
        }
        console.log(lstResult);
        localStorage.setItem("lstResult", JSON.stringify(lstResult));
        console.log(localStorage.getItem("lstResult"));

    }
    function handleNextButton() {
        index++;
        if (index < data.length) {
            saveResult();
            showQuestion();
        }
    };
    function handlePrevButton() {
        index--;
        if (index < data.length) {
            showQuestion();
        }
    };
    nextButton.addEventListener("click", () => {
        if (index < data.length) {
            handleNextButton();
        } else {
            startQuiz();
        }
    });
    prevButton.addEventListener("click", () => {
        console.log(index, data.length);
        if (index < data.length) {
            handlePrevButton();
        } else {
            startQuiz();
        }
    });

    startQuiz();

</script>

