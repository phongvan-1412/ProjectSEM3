@model List<ProjectSEM3.Models.Entities.Question.Req>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    <!-- Define countdown time -->
    var endTime = DateTime.UtcNow.AddSeconds(425);
    var timeRemaining = TimeSpan.FromTicks(endTime.Ticks - DateTime.UtcNow.Ticks).TotalSeconds.ToString("#");

    <!-- Get Question List -->
    var lst = ViewData["lstQuest"];
}

<div class="quiz-wrapper pt-5">
    <div class="container-fluid" style="z-index: 1">
        <div class="row text-center">
            <div id="jumper-btns" class="col d-flex flex-row justify-content-evenly d-none d-sm-block">
                @*<span class="step bg-white rounded-pill finish finish"></span>
                    <span class="step bg-white rounded-pill active"></span>
                    <span class="step bg-white rounded-pill"></span>
                    <span class="step bg-white rounded-pill"></span>
                    <span class="step bg-white rounded-pill"></span>*@
            </div>
        </div>

        <div class="container">
            <div id="wizard">

            </div>
        </div>

        <div class="container text-center mt-5 mb-5">
            <div class="d-flex justify-content-evenly align-items-center section-wrapper">
                <div class="d-flex flex-column justify-content-center text-center">
                    <div>
                        <button type="button" class="btn" style="display: inline;">1</button>
                    </div>
                    <div class="mt-3">
                        <span style="color: #000a38; font-size: 1rem">General Knowledge</span>
                    </div>
                </div>
                <div class="d-flex flex-column justify-content-center text-center">
                    <div>
                        <button type="button" class="btn" style="display: inline;">2</button>
                    </div>
                    <div class="mt-3">
                        <span style="color: #000a38; font-size: 1rem">Mathematics</span>
                    </div>
                </div>
                <div class="d-flex flex-column justify-content-center text-center">
                    <div>
                        <button type="button" class="btn" style="display: inline;">3</button>
                    </div>
                    <div class="mt-3">
                        <span style="color: #000a38; font-size: 1rem">Computer Technology</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex text-center justify-content-center align-items-center timer-wrapper">
            <div>
                <span id="minRemaining"></span>
            </div>
            <div>
                <span>:</span>
            </div>
            <div>
                <span id="secRemaining"></span>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    localStorage.removeItem("lstResult")
    /*-----------------------------------
        Countdown
    -------------------------------------*/
    var remSeconds = @timeRemaining;
    var secCounter = remSeconds % 60;

    function formatNumber(number) {
        if (number < 10) return '0' + number;
        else return '' + number;
    }
    function startTick() {
            document.getElementById("secRemaining").innerText = formatNumber(secCounter);
            document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));

        var _tick = setInterval(function () {
            if (remSeconds > 0 && secCounter == 0) {
                remSeconds = remSeconds - 1;
                secCounter = 60 - 1;
                document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
            }
            else if (remSeconds > 0 && secCounter != 0) {
                 remSeconds = remSeconds - 1;
                 secCounter = secCounter - 1;
                 document.getElementById("secRemaining").innerText = formatNumber(secCounter);
                 document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds / 60));
                 if (secCounter == 0)
                    secCounter = 60;
            }
            else {
                    alert('Times out!');
                    clearInterval(_tick);
                }
            }, 1000);
    }
    startTick();

    /*-----------------------------------
        Create json
    -------------------------------------*/
    var lstQuest = @Html.Raw(Json.Encode(lst));
    var data = lstQuest.Data;
    let quest = [
        {
            "Id": 0,
            "IdLevel": 0,
            "IdType": 0,
            "Content": "",
            "Options": ["A","B","C","D"],
            "CorrectAnwser": 0,
            "Point": 0,
            "IsMultiAnwser": 0,
            "Status": true
        },
        {
            "Id": 0,
            "IdLevel": 0,
            "IdType": 0,
            "Content": "",
            "Options": ["A", "B", "C", "D"],
            "CorrectAnwser": 0,
            "Point": 0,
            "IsMultiAnwser": 0,
            "Status": true
        },
        {
            "Id": 0,
            "IdLevel": 0,
            "IdType": 0,
            "Content": "",
            "Options": ["A", "B", "C", "D"],
            "CorrectAnwser": 0,
            "Point": 0,
            "IsMultiAnwser": 0,
            "Status": true
        }
    ]
    for (var i = 0; i < data.length; i++) {
        quest[i].Id = data[i].Id;
        quest[i].IdType = data[i].IdType;
        quest[i].Content = data[i].Content;
        quest[i].Options[0] = data[i].A;
        quest[i].Options[1] = data[i].B;
        quest[i].Options[2] = data[i].C;
        quest[i].Options[3] = data[i].D;
        quest[i].CorrectAnwser = data[i].CorrectAnwser;
        quest[i].Point = data[i].Point;
        quest[i].IsMultiAnwser = data[i].IsMultiAnwser;
        quest[i].Status = data[i].Status;
    }
    console.log(quest);

    /*-----------------------------------
        Handle Content
    -------------------------------------*/
    let container = document.getElementById("wizard");
    let jumper = document.getElementById("jumper-btns");
    let selectedAnswers = {};
    let question;
    let index;

    function showAnswer() {
        let options = ``;
        for (var i = 0; i < question.Options.length; i++) {
            let option = question.Options[i];
            let selected = false;
            if (selectedAnswers[`${question.Content}`] == option) {
                selected = true;
            }
            options += `
                <div class="answer-container rounded-pill bg-white text-start">
                        <input type="radio" onclick="addAnswer()" name="answer-btn" ${selected ? "checked = 'true'" : ""} value="${option}">${option}
                </div>
            `;
        }
        
        return options;
    };
    function jumpButtons() {
        let btns = ``;
        for (let i = 0; i < quest.length; i++) {
            btns += `<span class="step bg-white rounded-pill ${i == index ? "finish" : ""}" onclick="showQuestion(${i})" style="cursor: pointer"></span>`;
        }
        jumper.innerHTML = btns;
    };
    function addAnswer() {
        let currentOptions = document.getElementsByName("answer-btn");
        for (var i = 0; i < currentOptions.length; i++) {
            let currentOption = currentOptions[i];
            if (currentOption.checked == true) {
                selectedAnswers[`${question.Content}`] = currentOption.value;
                localStorage.setItem("lstResult", JSON.stringify(selectedAnswers));
            }
        }
        console.log(selectedAnswers);
    };
    function submitQuiz() {
        $.ajax({
            type: "POST",
            data: { result: localStorage.getItem("lstResult") },
            dataType: "json",
            url: "/Quiz/Submit",
            success: function (result) {
                console.log(result);
            },
            error: function (req, status, error) {
                console.log(error);
            }
        });
    };
    function showQuestion(i) {
        index = i;
        if (quest[i]) {
            jumpButtons();
            question = quest[i];
            let options = showAnswer();
            container.innerHTML = `
                <div id="questDisplay" class="multisteps_form_panel">
                    <span class="question_number text-uppercase d-flex justify-content-center align-items-center">
                        Question
                        <span id="question-number" class="d-flex justify-content-center ms-1" style="margin-top: 16px">${index + 1}</span>/${quest.length}
                    </span>

                    <h1 class="question_title text-center">${question.Content} </h1>
                    <div class="form_items d-flex flex-column justify-content-center">
                        ${options}
                    </div>
                </div>

                <div class="form_btn action-btns text-center ms-5 mt-5">
                    ${index > 0 ? `<button type="button" onclick="showQuestion(${index - 1})" class="f_btn text-uppercase rounded-pill border-0" style="display: inline;">Prev Question</button>` : ""}
                    ${index + 1 < quest.length ?
                    `<button type="button" onclick="showQuestion(${index + 1})" class="f_btn text-uppercase rounded-pill border-0">Next Question</button>`
                    :
                    `<button type="button" onclick="submitQuiz()" class="f_btn text-uppercase rounded-pill border-0">Submit</button>`}
                </div>
            `;
        }
    };

    showQuestion(0);

</script>



